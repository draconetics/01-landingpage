{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "01Landing Page Project",
        "description": "A minimal and easy to follow example of what you need to create a CRUD style API in NodeJs",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers":[
        {
            "url": "http://localhost:3000",
            "description": " Optional server description, e.g. Internal staging server for testing"
        },
        {
            "url": "http://localhost:3001",
            "description": " Optional server description, e.g. Main (production) server"
        }
    ],
    "tags": [
        {
            "name": "Emails",
            "description": "API for handle emails in the system"
        }
    ],
    
    "paths": {
        "/emails": {
            "get": {
                "tags": [
                    "Emails"
                ],
                "summary": "Get all emails in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Emails"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Emails"
                ],
                "summary": "Create a new Email in system",
                "requestBody": {
                    "description": "Email Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Email"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Email"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "UNPROCESSABLE ENTITY",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            
            "Email": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                }
            },
            "Emails": {
                "type": "array",
                "items": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/components/schemas/Email"
                    }
                   
                }
            },
            "Error":{
                "type": "object",
                "properties":{
                    "code": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    }
}
